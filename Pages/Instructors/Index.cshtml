@page "{id:int?}"
@model ContosoUniversity.Pages.Instructors.IndexModel

@{
    ViewData["Title"] = "Instructor";
}

<h2>Instructors</h2>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Instructors[0].LastName)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Instructors[0].FirstMidName)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Instructors[0].HireDate)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Instructors)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HireDate)
                </td>

                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a> |
                    <a asp-page="./Index" asp-route-id="@item.ID">Select</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.InstructorData?.Course != null)
{
    <h3>Courses Taught by Selected Instructor</h3>
    <table class="table">
        <tr>
            <th></th>
            <th>Number</th>
            <th>Title</th>
            <th>Department</th>
        </tr>

        @foreach (var item in Model.InstructorData.Course)
        {
            string selectedRow = item.CourseID == Model.CourseID ? "table-success" : "";
            <tr class="@selectedRow">
                <td>
                    <a asp-page="./Index" asp-route-courseID="@item.CourseID">Select</a>
                </td>
                <td>@item.CourseID</td>
                <td>@item.Title</td>
                <td>@item.Department.Name</td>
            </tr>
        }
    </table>
}

@if (Model.InstructorData?.Enrollments != null)
{
    <h3>Students Enrolled in Selected Course</h3>
    <table class="table">
        <tr>
            <th>Name</th>
            <th>Grade</th>
        </tr>
        @foreach (var item in Model.InstructorData.Enrollments)
        {
            <tr>
                <td>@item.Student.FullName</td>
                <td>@Html.DisplayFor(modelItem => item.Grade)</td>
            </tr>
        }
    </table>
}

@{
    var prevDisabled = !Model.Instructors.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Instructors.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Instructors.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Instructors.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>
